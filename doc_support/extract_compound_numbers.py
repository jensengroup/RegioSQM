#!/usr/bin/python3
# -*- coding: utf-8 -*-

# name:    extract_compound_numbers.py
# author:  nbehrnd@yahoo.com
# license: MIT, 2020
# date:    2020-07-19 (YYYY-MM-DD)
# edit:    2020-09-14 (YYYY-MM-DD)
#
"""Write RegioSQM input file with compound number and SMILES string.

    The SI .pdf about RegioRQM lists the compounds tested by Jensen
    et al., binned in EAS groups such as furanes, thiophenes, etc.  To
    replicate their findings and to check if a modification of their
    scripts yields a prediction (still) in line with their dedicated
    web site or / and seminal publication, test data shall pass the
    local installation.

    Rreprint as .pdf file the SI about regiosqm the page range of
    interest (e.g., furanes, thiophenes) as a .pdf file.  Next, a run
    of

    pdftotext [example.pdf]

    writes the new file [example.txt] with any text identified in file
    [example.pdf].  From the CLI of Python, call the current script
    by

    python extract_compound_numbers.py [example.txt]

    to write file [examples_smiles.csv], a listing of compound numbers
    and SMILES strings suitable an input file for RegioSQM."""


import argparse
import sys

register = []
reference_register = []
output_register = []


def file_read():
    """Identify the file to read."""
    try:
        with args.inputfile as source:
            for line in source:
                register.append(str(line).strip())

    except IOError:
        print("File '{}' is not accessible, exit.".format(sys.argv[1]))
        sys.exit()


def read_compounds_smiles():
    """Attempt to read _all_ content of compounds_smiles.csv."""

    try:
        with open("compounds_smiles.csv", mode="r") as source:
            for line in source:
                line = str(line).strip()
                retain = ' '.join(line.split()[:2])
                reference_register.append(retain)

    except IOError:
        print("Reference file 'compounds_smiles.csv' is inaccessible.  Exit")
        sys.exit()


def identify_interesting_smiles():
    """Report attributed SMILES to compounds numbers.

    Input will be file [compound.txt], created by pdftotext.  Results
    are stored in an intermediate [output_register]."""

    check_register = []
    for line in register:
        if str("[") in line:
            compound_number = str(line).strip()
            compound_number = compound_number.split()[0]

            compound_string = ''.join(['comp', compound_number, ' '])
            check_register.append(compound_string)

    for compound in check_register:
        compare = compound.split()[0]
        for entry in reference_register:
            test = entry.split()[0]
            if str(compare) == str(test):
                output_register.append(entry)
                continue


def report_writer():
    """Report compound identifier with SMILES string."""
    output_file = ''.join([str(sys.argv[1])[:-4], "_smiles.csv"])
    try:
        with open(output_file, mode="w") as newfile:
            for entry in output_register:
                newfile.write("{}\n".format(entry))

        print("File '{}' was written.".format(output_file))
    except IOError:
        print("Error writing file '{}'.  Exit.".format(output_file))
        sys.exit()


# clarification for argparse:
parser = argparse.ArgumentParser(
    description=
    "List compound number and SMILES for RegioSQM with file 'compounds_smiles.csv'"
)

parser.add_argument(
    'inputfile',
    type=argparse.FileType('r'),
    help='Input text file, typically [compounds.txt] generated by pdftotxt')

args = parser.parse_args()

if __name__ == "__main__":
    file_read()
    read_compounds_smiles()
    identify_interesting_smiles()
    report_writer()
